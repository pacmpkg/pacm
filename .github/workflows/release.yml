name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: ubuntu-latest
            target: arm-unknown-linux-gnueabihf
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: windows-latest
            target: i686-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: macos-latest
            target: aarch64-apple-darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Build release
      run: cargo build --release --target ${{ matrix.target }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: pacm-${{ matrix.target }}
        path: target/${{ matrix.target }}/release/pacm*

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-release
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release files
      run: |
        mkdir release-files
        find artifacts -name "pacm*" -type f -exec cp {} release-files/ \;
        cp CHANGELOG.md release-files/

    - name: Read changelog
      id: changelog
      run: echo "content<<EOF" >> $GITHUB_OUTPUT && cat CHANGELOG.md >> $GITHUB_OUTPUT && echo "EOF" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: release-files/*
        body: ${{ steps.changelog.outputs.content }}
        generate_release_notes: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}